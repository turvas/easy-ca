#!/bin/bash
# Derek Moore <derek.moore@gmail.com>

usage() {
    echo "Usage: $0 -s SERVER_NAME [-a ALT_NAME]..."
    echo "Issues a server certificate for SERVER_NAME"
    echo
    echo "Options:"
    echo "    -s SERVER_NAME  Server hostname (commonName) for the new cert"
    echo "    -a ALT_NAME     One (or more) subjectAltNames for the new cert (optional)"
    echo
    exit 2
}

SERVER_NAME=
ALT_NAME=

while getopts s:a: FLAG; do
    case $FLAG in
        s) SERVER_NAME=${OPTARG}
           if [ -z "${ALT_NAME}" ]; then
               ALT_NAME="DNS:${OPTARG}"
           else
               ALT_NAME="${ALT_NAME}, DNS:${OPTARG}"
           fi
           ;;
        a) if [ -z "${ALT_NAME}" ]; then
               ALT_NAME="DNS:${OPTARG}"
           else
               ALT_NAME="${ALT_NAME}, DNS:${OPTARG}"
           fi
           ;;
        *) usage
           ;;
    esac
done

if [ "${SERVER_NAME}" == "" ]; then
    usage
fi

BIN_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source ${BIN_DIR}/functions
source ${BIN_DIR}/defaults.conf

# Sanitize the commonName to make it suitable for use in filenames
SAFE_NAME=`echo ${SERVER_NAME} | sed 's/\*/star/g'`
SAFE_NAME=`echo ${SAFE_NAME} | sed 's/[^A-Za-z0-9-]/-/g'`

echo
echo "Creating new SSL server certificate for:"
echo "commonName: ${SERVER_NAME}"
echo "subjectAltName: ${ALT_NAME}"
echo

pushd ${BIN_DIR}/.. > /dev/null

if [ -f conf/${SAFE_NAME}.server.conf ]; then
    echo "Configuration already exists for '${SERVER_NAME}', exiting."
    exit 1
fi

if [ -z $CA_PASS ]; then
        echo -n "Enter passphase for signing CA key: "
        read -s PASS
        echo
        export CA_PASS=${PASS}
fi
# Generate the server openssl config
export CA_HOSTNAME=${SERVER_NAME}
export CA_SAN=${ALT_NAME}
export SAN=${ALT_NAME}
template "${BIN_DIR}/templates/server.tpl" "conf/${SAFE_NAME}.server.conf"

echo Starting request/CSR creations
if [ $SHLVL > 1 ]; then         # if called by other script
        BATCH='-batch'
fi
# Create the server key and csr
openssl req -new -nodes $BATCH \
            -config conf/${SAFE_NAME}.server.conf \
            -keyout private/${SAFE_NAME}.server.key \
            -out csr/${SAFE_NAME}.server.csr
if [ $? -gt 0 ]; then
        echo ERROR: CSR or Key generaytion failed
        exit 1
fi
chmod 0400 private/${SAFE_NAME}.server.key

if [ ! -f csr/${SAFE_NAME}.server.csr ] || [ ! -f private/${SAFE_NAME}.server.key ]; then
        echo no CSR found: csr/${SAFE_NAME}.server.csr 
        exit 1
fi
echo Starting signing..
# Create the server certificate
openssl ca -batch -notext \
           -config conf/ca.conf \
           -in csr/${SAFE_NAME}.server.csr \
           -out certs/${SAFE_NAME}.server.crt \
           -days 730 \
           -extensions server_ext \
           -passin env:CA_PASS

if [ $? -eq 0 ] && [ -f "private/${SAFE_NAME}.server.key" ]; then
	echo
	echo "Server certificate created in ${BIN_DIR}/../certs"
	echo
        popd > /dev/null
else
   echo "ERROR: Cert creation (signing) failed!"
        popd > /dev/null
   exit 1
fi

